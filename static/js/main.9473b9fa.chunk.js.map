{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","username","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+MAqBeA,EAjBF,SAAC,GAAoC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAEpC,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cAErB,gCACI,6BAAKH,IACL,4BAAIC,IACJ,4BAAIC,WCiBLK,EAzBE,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAEjB,OAEA,8BAGJA,EAAOC,KAAI,SAACC,EAAMC,GAElB,OACA,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdH,KAAMQ,EAAOG,GAAGX,KAChBC,MAAOO,EAAOG,GAAGV,MACjBC,SAAUM,EAAOG,GAAGT,UAJfS,SCOQC,EApBG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAE9B,OAEI,qBAAKV,UAAU,OAAf,SAEI,uBAAOA,UAAU,mCACjBW,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,OCDPI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,WAApE,SACKJ,EAAMK,YCoBJC,E,kDAtBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAU,CAAEJ,UAAU,M,oBAG/B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAGJG,KAAKX,MAAMK,a,GAjBCQ,aCoEZC,E,kDAvDX,aAAe,IAAD,8BACV,gBAgBRC,eAAiB,SAACC,GAEd,EAAKJ,SAAS,CAAElB,YAAYsB,EAAMC,OAAOC,SAjBrC,EAAKX,MAAQ,CACblB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAe3C,WAAU,IAAD,EAE2BZ,KAAKJ,MAA7BlB,EAFH,EAEGA,OAAQK,EAFX,EAEWA,YAEV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAGzD,OAAQtC,EAAOwC,OAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAE9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WAR9B,oBAAIvC,UAAU,QAAd,yB,GArCM4B,aCDHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.9473b9fa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Card = ( { name, email, username, id} ) => {\r\n    \r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\r\n\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{username}</p>\r\n            </div> \r\n        </div>\r\n\r\n    );\r\n}   \r\n\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\n\r\nconst CardList = ( { robots } ) => {\r\n\r\n    return (\r\n\r\n    <div>\r\n        {\r\n\r\nrobots.map((user, i) => {\r\n\r\nreturn ( \r\n<Card \r\n  key={i}\r\n  id={robots[i].id}\r\n  name={robots[i].name} \r\n  email={robots[i].email}\r\n  username={robots[i].username} \r\n  \r\n  />\r\n  );\r\n})\r\n}\r\n</div>\r\n);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"pa2 \"> \r\n\r\n            <input className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type=\"search\" placeholder=\"Search Robots\" \r\n            onChange={searchChange}\r\n            />\r\n            \r\n\r\n        </div>\r\n    );\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '70000px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState( { hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","//import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport '../containers/App';\r\n\r\n\r\n//const state = {\r\n    \r\n//}\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n        robots: [],\r\n        searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response=> response.json())\r\n        .then(users => this.setState({ robots: users}));\r\n        \r\n    }\r\n \r\n\r\n\r\nonSearchChange = (event) => {\r\n    \r\n    this.setState({ searchfield:event.target.value })\r\n\r\n   \r\n  \r\n}\r\n\r\n\r\n    render() {\r\n\r\n        const { robots, searchfield } = this.state;\r\n\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n\r\n        return !robots.length ? \r\n            <h1 className=\"tc h1\">Loading</h1> :\r\n         (\r\n            <div className=\"tc\"> \r\n                <h1 className=\"f1\">Robot Friends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n\r\n                <Scroll> \r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                     </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    \r\n}\r\n\r\n    \r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\nimport App from './containers/App'; //This App will be the father of all our children/components \nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}